{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\n\n// Player component to render the player, rockets, and enemies on the canvas\nfunction Player({\n  canvasRef,\n  playerX,\n  rockets,\n  enemies,\n  gameStatus,\n  enemyColor\n}) {\n  _s();\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Function to clear the canvas before each new update\n    const clearCanvas = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n    };\n\n    // Draw the player as a green rectangle\n    ctx.fillStyle = 'green';\n    ctx.fillRect(playerX, 550, 50, 30); // Player's position and size\n\n    // Draw each rocket as a red rectangle\n    rockets.forEach(rocket => {\n      ctx.fillStyle = 'red';\n      ctx.fillRect(rocket.x, rocket.y, 5, 20); // Rocket's position and size\n    });\n\n    // Draw each enemy as a rectangle, color depends on game status\n    enemies.forEach(enemy => {\n      ctx.fillStyle = gameStatus === 'lost' ? 'gray' : enemyColor;\n      ctx.fillRect(enemy.x, enemy.y, 50, 30); // Enemy's position and size\n    });\n\n    // Return the clearCanvas function to be called on component unmount\n    return clearCanvas;\n  }, [playerX, rockets, enemies, gameStatus, enemyColor, canvasRef]); // Dependencies for useEffect\n\n  return null; // This component does not render any JSX\n}\n_s(Player, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["useEffect","Player","canvasRef","playerX","rockets","enemies","gameStatus","enemyColor","_s","canvas","current","ctx","getContext","clearCanvas","clearRect","width","height","fillStyle","fillRect","forEach","rocket","x","y","enemy","_c","$RefreshReg$"],"sources":["/app/src/components/spaceInvaders/player.js"],"sourcesContent":["import { useEffect } from 'react';\n\n// Player component to render the player, rockets, and enemies on the canvas\nfunction Player({ canvasRef, playerX, rockets, enemies, gameStatus, enemyColor }) {\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n\n        // Function to clear the canvas before each new update\n        const clearCanvas = () => {\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n        };\n\n        // Draw the player as a green rectangle\n        ctx.fillStyle = 'green';\n        ctx.fillRect(playerX, 550, 50, 30); // Player's position and size\n\n        // Draw each rocket as a red rectangle\n        rockets.forEach(rocket => {\n            ctx.fillStyle = 'red';\n            ctx.fillRect(rocket.x, rocket.y, 5, 20); // Rocket's position and size\n        });\n\n        // Draw each enemy as a rectangle, color depends on game status\n        enemies.forEach(enemy => {\n            ctx.fillStyle = gameStatus === 'lost' ? 'gray' : enemyColor;\n            ctx.fillRect(enemy.x, enemy.y, 50, 30); // Enemy's position and size\n        });\n\n        // Return the clearCanvas function to be called on component unmount\n        return clearCanvas;\n    }, [playerX, rockets, enemies, gameStatus, enemyColor, canvasRef]); // Dependencies for useEffect\n\n    return null; // This component does not render any JSX\n}\n\nexport default Player;"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;;AAEjC;AACA,SAASC,MAAMA,CAAC;EAAEC,SAAS;EAAEC,OAAO;EAAEC,OAAO;EAAEC,OAAO;EAAEC,UAAU;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAC9ER,SAAS,CAAC,MAAM;IACZ,MAAMS,MAAM,GAAGP,SAAS,CAACQ,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;;IAEnC;IACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;MACtBF,GAAG,CAACG,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEL,MAAM,CAACM,KAAK,EAAEN,MAAM,CAACO,MAAM,CAAC;IACpD,CAAC;;IAED;IACAL,GAAG,CAACM,SAAS,GAAG,OAAO;IACvBN,GAAG,CAACO,QAAQ,CAACf,OAAO,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;;IAEpC;IACAC,OAAO,CAACe,OAAO,CAACC,MAAM,IAAI;MACtBT,GAAG,CAACM,SAAS,GAAG,KAAK;MACrBN,GAAG,CAACO,QAAQ,CAACE,MAAM,CAACC,CAAC,EAAED,MAAM,CAACE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IAC7C,CAAC,CAAC;;IAEF;IACAjB,OAAO,CAACc,OAAO,CAACI,KAAK,IAAI;MACrBZ,GAAG,CAACM,SAAS,GAAGX,UAAU,KAAK,MAAM,GAAG,MAAM,GAAGC,UAAU;MAC3DI,GAAG,CAACO,QAAQ,CAACK,KAAK,CAACF,CAAC,EAAEE,KAAK,CAACD,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;IAC5C,CAAC,CAAC;;IAEF;IACA,OAAOT,WAAW;EACtB,CAAC,EAAE,CAACV,OAAO,EAAEC,OAAO,EAAEC,OAAO,EAAEC,UAAU,EAAEC,UAAU,EAAEL,SAAS,CAAC,CAAC,CAAC,CAAC;;EAEpE,OAAO,IAAI,CAAC,CAAC;AACjB;AAACM,EAAA,CA/BQP,MAAM;AAAAuB,EAAA,GAANvB,MAAM;AAiCf,eAAeA,MAAM;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}