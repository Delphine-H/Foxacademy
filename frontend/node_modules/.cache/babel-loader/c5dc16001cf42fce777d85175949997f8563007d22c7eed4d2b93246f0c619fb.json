{"ast":null,"code":"var _jsxFileName = \"/app/src/context/authContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true); // loading state\n  const navigate = useNavigate();\n\n  // Function to connect\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('http://localhost:5000/login', {\n        Email: email,\n        Password: password\n      });\n      if (response.status === 200) {\n        const {\n          token,\n          role\n        } = response.data;\n        localStorage.setItem('token', token); // Store the token in localStorage\n        setUser({\n          token,\n          role\n        });\n        setLoading(false); // Stop loading after successful login\n        navigate('/menu');\n      }\n    } catch (error) {\n      console.error(\"Erreur lors de la connexion:\", error);\n      throw error; // Propagate the error so that it is captured in Login.js\n    }\n  };\n\n  // Function to disconnect\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    navigate('/login');\n  };\n\n  // Check if a user is logged in when the application loads\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setUser({\n        token\n      });\n    }\n    setLoading(false);\n  }, []);\n\n  // Only make the application visible when the verification is complete\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Chargement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"lk6viekuCMMpYORkLYLEq0Wsfds=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","navigate","login","email","password","response","post","Email","Password","status","token","role","data","localStorage","setItem","error","console","logout","removeItem","getItem","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","_c","$RefreshReg$"],"sources":["/app/src/context/authContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true); // loading state\n  const navigate = useNavigate();\n\n  // Function to connect\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('http://localhost:5000/login', {\n        Email: email,\n        Password: password,\n      });\n\n      if (response.status === 200) {\n        const { token, role } = response.data;\n        localStorage.setItem('token', token); // Store the token in localStorage\n        setUser({ token, role });\n        setLoading(false); // Stop loading after successful login\n        navigate('/menu');\n      }\n    } catch (error) {\n      console.error(\"Erreur lors de la connexion:\", error);\n      throw error; // Propagate the error so that it is captured in Login.js\n    }\n  };\n\n  // Function to disconnect\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    navigate('/login');\n  };\n\n  // Check if a user is logged in when the application loads\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setUser({ token });\n    }\n    setLoading(false);\n  }, []);\n\n  // Only make the application visible when the verification is complete\n  if (loading) {\n    return <div>Chargement...</div>;\n  }\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9C,MAAMc,QAAQ,GAAGZ,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMa,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,6BAA6B,EAAE;QAC/DC,KAAK,EAAEJ,KAAK;QACZK,QAAQ,EAAEJ;MACZ,CAAC,CAAC;MAEF,IAAIC,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;QAC3B,MAAM;UAAEC,KAAK;UAAEC;QAAK,CAAC,GAAGN,QAAQ,CAACO,IAAI;QACrCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,KAAK,CAAC,CAAC,CAAC;QACtCZ,OAAO,CAAC;UAAEY,KAAK;UAAEC;QAAK,CAAC,CAAC;QACxBX,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;QACnBC,QAAQ,CAAC,OAAO,CAAC;MACnB;IACF,CAAC,CAAC,OAAOc,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,MAAMA,KAAK,CAAC,CAAC;IACf;EACF,CAAC;;EAED;EACA,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnBJ,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC;IAChCpB,OAAO,CAAC,IAAI,CAAC;IACbG,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;;EAED;EACAb,SAAS,CAAC,MAAM;IACd,MAAMsB,KAAK,GAAGG,YAAY,CAACM,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIT,KAAK,EAAE;MACTZ,OAAO,CAAC;QAAEY;MAAM,CAAC,CAAC;IACpB;IACAV,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAID,OAAO,EAAE;IACX,oBAAOP,OAAA;MAAAG,QAAA,EAAK;IAAa;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACjC;EAEA,oBACE/B,OAAA,CAACC,WAAW,CAAC+B,QAAQ;IAACC,KAAK,EAAE;MAAE5B,IAAI;MAAEK,KAAK;MAAEe;IAAO,CAAE;IAAAtB,QAAA,EAClDA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC3B,EAAA,CApDWF,YAAY;EAAA,QAGNL,WAAW;AAAA;AAAAqC,EAAA,GAHjBhC,YAAY;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}