{"ast":null,"code":"var _jsxFileName = \"/app/src/pages/quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Header from '../components/header';\nimport '../styles/form.css';\nimport { fetchUserScore } from '../utils/appUtils';\nimport Footer from '../components/footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizForm = () => {\n  _s();\n  const [question, setQuestion] = useState(null);\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\n  const [message, setMessage] = useState('');\n  const [correctAnswers, setCorrectAnswers] = useState([]);\n  const [subject, setSubject] = useState('Mathématiques');\n  const [formSubmitted, setFormSubmitted] = useState(false); // état pour suivre si le formulaire a été soumis\n  const [userScore, setUserScore] = useState(0); // état pour stocker le score de l'utilisateur\n\n  useEffect(() => {\n    const fetchScore = async () => {\n      const score = await fetchUserScore();\n      setUserScore(score);\n    };\n    fetchScore(); // Récupérer le score de l'utilisateur lors du chargement du composant\n\n    const fetchQuestion = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/question', {\n          params: {\n            Subject: subject,\n            Type: 'QCM' // Filtrer pour obtenir uniquement les questions de type QCM\n          },\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}` // transmettre l'ID de l'utilisateur\n          }\n        });\n        console.log('Question récupérée:', response.data);\n        setQuestion(response.data);\n        setFormSubmitted(false); // Réinitialiser l'état du formulaire\n        setSelectedAnswers([]); // Réinitialiser les réponses sélectionnées\n        setMessage(''); // Réinitialiser le message\n        setCorrectAnswers([]); // Réinitialiser les réponses correctes\n      } catch (error) {\n        console.error('Erreur lors de la récupération de la question:', error);\n      }\n    };\n    fetchQuestion();\n  }, [subject]); // tableau des dépendances\n\n  const handleCheckboxChange = e => {\n    const value = e.target.value;\n    setSelectedAnswers(prev => prev.includes(value) ? prev.filter(ans => ans !== value) : [...prev, value]);\n  };\n  const submitResult = async score => {\n    try {\n      const response = await axios.post('http://localhost:5000/result', {\n        QuestionID: question.QuestionID,\n        Score: score,\n        LastEvaluated: new Date(),\n        Subject: subject\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}` // transmettre l'ID de l'utilisateur\n        }\n      });\n      setUserScore(response.data.newTotalScore); // Mettre à jour le score de l'utilisateur après soumission du résultat\n    } catch (error) {\n      console.error('Erreur lors de la soumission du résultat:', error);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Logique pour vérifier les réponses\n    const correctAnswers = question.Answers.filter(answer => answer.isCorrect).map(answer => answer.text);\n    const incorrectAnswers = question.Answers.filter(answer => !answer.isCorrect).map(answer => answer.text);\n    const allCorrectSelected = correctAnswers.every(answer => selectedAnswers.includes(answer));\n    const noIncorrectSelected = incorrectAnswers.every(answer => !selectedAnswers.includes(answer));\n    let score = 0;\n    if (allCorrectSelected && noIncorrectSelected) {\n      setMessage('Bonne réponse !');\n      setCorrectAnswers([]);\n      score = 1; // Score de 1 pour une bonne réponse\n    } else {\n      setMessage('Mauvaise réponse. Essaie encore.');\n      setCorrectAnswers(correctAnswers);\n      score = 0; // Score de 0 pour une mauvaise réponse\n    }\n    setFormSubmitted(true); // Marquer le formulaire comme soumis\n\n    // Soumettre le résultat\n    await submitResult(score);\n  };\n  const handleNextQuestion = () => {\n    // Recharger une nouvelle question\n    axios.get('http://localhost:5000/question', {\n      params: {\n        Subject: subject,\n        Type: 'QCM' // Filtrer pour obtenir uniquement les questions de type QCM\n      },\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}` // transmettre l'ID de l'utilisateur\n      }\n    }).then(response => {\n      console.log('Question suivante récupérée:', response.data);\n      setQuestion(response.data);\n      setFormSubmitted(false); // Réinitialiser l'état du formulaire soumis\n      setSelectedAnswers([]); // Réinitialiser les réponses sélectionnées\n      setMessage(''); // Réinitialiser le message\n      setCorrectAnswers([]); // Réinitialiser les réponses correctes\n    }).catch(error => {\n      console.error('Erreur lors de la récupération de la question suivante:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Questions \\xE0 choix multiple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-display\",\n        children: [\"Score: \", userScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"subject-select\",\n          children: \"Choisis une mati\\xE8re :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"subject-select\",\n          value: subject,\n          onChange: e => setSubject(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Math\\xE9matiques\",\n            children: \"Math\\xE9matiques\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Fran\\xE7ais\",\n            children: \"Fran\\xE7ais\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Histoire\",\n            children: \"Histoire\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"G\\xE9ographie\",\n            children: \"G\\xE9ographie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Sciences\",\n            children: \"Sciences\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Anglais\",\n            children: \"Anglais\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), question ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              fontWeight: 'bold',\n              fontSize: '1.2em'\n            },\n            children: question.Text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkbox-container\",\n          children: question.Answers.map((ans, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkbox-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: `réponse-${index}`,\n              name: \"r\\xE9ponse\",\n              value: ans.text,\n              checked: selectedAnswers.includes(ans.text),\n              onChange: handleCheckboxChange,\n              disabled: formSubmitted // Désactiver les cases à cocher après soumission\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `réponse-${index}`,\n              style: {\n                color: correctAnswers.includes(ans.text) ? 'green' : 'black',\n                whiteSpace: 'nowrap'\n              },\n              children: ans.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), formSubmitted ? /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            marginTop: '50px'\n          },\n          type: \"button\",\n          className: \"btn-cta\",\n          onClick: handleNextQuestion,\n          children: \"Question suivante\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            marginTop: '50px'\n          },\n          type: \"submit\",\n          className: \"btn-cta\",\n          children: \"R\\xE9pondre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Bravo ! Tu as bien travaill\\xE9 dans cette mati\\xE8re aujourd'hui ! Change de discipline ou reviens demain.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizForm, \"bnGIEAsTwyiNnFSh12ky7vq9RmE=\");\n_c = QuizForm;\nexport default QuizForm;\nvar _c;\n$RefreshReg$(_c, \"QuizForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","Header","fetchUserScore","Footer","jsxDEV","_jsxDEV","QuizForm","_s","question","setQuestion","selectedAnswers","setSelectedAnswers","message","setMessage","correctAnswers","setCorrectAnswers","subject","setSubject","formSubmitted","setFormSubmitted","userScore","setUserScore","fetchScore","score","fetchQuestion","response","get","params","Subject","Type","headers","Authorization","localStorage","getItem","console","log","data","error","handleCheckboxChange","e","value","target","prev","includes","filter","ans","submitResult","post","QuestionID","Score","LastEvaluated","Date","newTotalScore","handleSubmit","preventDefault","Answers","answer","isCorrect","map","text","incorrectAnswers","allCorrectSelected","every","noIncorrectSelected","handleNextQuestion","then","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","id","onChange","onSubmit","style","fontWeight","fontSize","Text","index","type","name","checked","disabled","color","whiteSpace","marginTop","onClick","_c","$RefreshReg$"],"sources":["/app/src/pages/quiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Header from '../components/header';\nimport '../styles/form.css';\nimport { fetchUserScore } from '../utils/appUtils';\nimport Footer from '../components/footer';\n\nconst QuizForm = () => {\n  const [question, setQuestion] = useState(null);\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\n  const [message, setMessage] = useState('');\n  const [correctAnswers, setCorrectAnswers] = useState([]);\n  const [subject, setSubject] = useState('Mathématiques');\n  const [formSubmitted, setFormSubmitted] = useState(false); // état pour suivre si le formulaire a été soumis\n  const [userScore, setUserScore] = useState(0); // état pour stocker le score de l'utilisateur\n\n  useEffect(() => {\n    const fetchScore = async () => {\n      const score = await fetchUserScore();\n      setUserScore(score);\n    };\n\n    fetchScore(); // Récupérer le score de l'utilisateur lors du chargement du composant\n\n    const fetchQuestion = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/question', {\n          params: {\n            Subject: subject,\n            Type: 'QCM', // Filtrer pour obtenir uniquement les questions de type QCM\n          },\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`, // transmettre l'ID de l'utilisateur\n          },\n        });\n        console.log('Question récupérée:', response.data);\n        setQuestion(response.data);\n        setFormSubmitted(false); // Réinitialiser l'état du formulaire\n        setSelectedAnswers([]); // Réinitialiser les réponses sélectionnées\n        setMessage(''); // Réinitialiser le message\n        setCorrectAnswers([]); // Réinitialiser les réponses correctes\n      } catch (error) {\n        console.error('Erreur lors de la récupération de la question:', error);\n      }\n    };\n\n    fetchQuestion();\n  }, [subject]); // tableau des dépendances\n\n  const handleCheckboxChange = (e) => {\n    const value = e.target.value;\n    setSelectedAnswers(prev =>\n      prev.includes(value) ? prev.filter(ans => ans !== value) : [...prev, value]\n    );\n  };\n\n  const submitResult = async (score) => {\n    try {\n      const response = await axios.post('http://localhost:5000/result', {\n        QuestionID: question.QuestionID,\n        Score: score,\n        LastEvaluated: new Date(),\n        Subject: subject,\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`, // transmettre l'ID de l'utilisateur\n        },\n      });\n      setUserScore(response.data.newTotalScore); // Mettre à jour le score de l'utilisateur après soumission du résultat\n    } catch (error) {\n      console.error('Erreur lors de la soumission du résultat:', error);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // Logique pour vérifier les réponses\n    const correctAnswers = question.Answers.filter(answer => answer.isCorrect).map(answer => answer.text);\n    const incorrectAnswers = question.Answers.filter(answer => !answer.isCorrect).map(answer => answer.text);\n\n    const allCorrectSelected = correctAnswers.every(answer => selectedAnswers.includes(answer));\n    const noIncorrectSelected = incorrectAnswers.every(answer => !selectedAnswers.includes(answer));\n\n    let score = 0;\n    if (allCorrectSelected && noIncorrectSelected) {\n      setMessage('Bonne réponse !');\n      setCorrectAnswers([]);\n      score = 1; // Score de 1 pour une bonne réponse\n    } else {\n      setMessage('Mauvaise réponse. Essaie encore.');\n      setCorrectAnswers(correctAnswers);\n      score = 0; // Score de 0 pour une mauvaise réponse\n    }\n\n    setFormSubmitted(true); // Marquer le formulaire comme soumis\n\n    // Soumettre le résultat\n    await submitResult(score);\n  };\n\n  const handleNextQuestion = () => {\n    // Recharger une nouvelle question\n    axios.get('http://localhost:5000/question', {\n      params: {\n        Subject: subject,\n        Type: 'QCM', // Filtrer pour obtenir uniquement les questions de type QCM\n      },\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`, // transmettre l'ID de l'utilisateur\n      },\n    })\n    .then(response => {\n      console.log('Question suivante récupérée:', response.data);\n      setQuestion(response.data);\n      setFormSubmitted(false); // Réinitialiser l'état du formulaire soumis\n      setSelectedAnswers([]); // Réinitialiser les réponses sélectionnées\n      setMessage(''); // Réinitialiser le message\n      setCorrectAnswers([]); // Réinitialiser les réponses correctes\n    })\n    .catch(error => {\n      console.error('Erreur lors de la récupération de la question suivante:', error);\n    });\n  };\n\n  return (\n    <div>\n      <Header />\n      <div className=\"form-container\">\n        <h1>Questions à choix multiple</h1>\n        <div className=\"score-display\">Score: {userScore}</div> {/* Afficher le score de l'utilisateur */}\n        <div>\n          <label htmlFor=\"subject-select\">Choisis une matière :</label>\n          <select\n            id=\"subject-select\"\n            value={subject}\n            onChange={(e) => setSubject(e.target.value)}\n          >\n            <option value=\"Mathématiques\">Mathématiques</option>\n            <option value=\"Français\">Français</option>\n            <option value=\"Histoire\">Histoire</option>\n            <option value=\"Géographie\">Géographie</option>\n            <option value=\"Sciences\">Sciences</option>\n            <option value=\"Anglais\">Anglais</option>\n          </select>\n        </div>\n        {question ? (\n          <form onSubmit={handleSubmit}>\n            <div>\n              <label style={{ fontWeight: 'bold', fontSize: '1.2em' }}>{question.Text}</label>\n            </div>\n            <div className=\"checkbox-container\">\n              {question.Answers.map((ans, index) => (\n                <div key={index} className=\"checkbox-item\">\n                  <input\n                    type=\"checkbox\"\n                    id={`réponse-${index}`}\n                    name=\"réponse\"\n                    value={ans.text}\n                    checked={selectedAnswers.includes(ans.text)}\n                    onChange={handleCheckboxChange}\n                    disabled={formSubmitted} // Désactiver les cases à cocher après soumission\n                  />\n                  <label\n                    htmlFor={`réponse-${index}`}\n                    style={{ color: correctAnswers.includes(ans.text) ? 'green' : 'black',\n                      whiteSpace: 'nowrap'\n                     }}\n                  >\n                    {ans.text}\n                  </label>\n                </div>\n              ))}\n            </div>\n            {formSubmitted ? (\n              <button style={{ marginTop: '50px' }} type=\"button\"\n              className=\"btn-cta\" onClick={handleNextQuestion}>Question suivante</button>\n            ) : (\n              <button style={{ marginTop: '50px' }} type=\"submit\" className=\"btn-cta\">Répondre</button>\n            )}\n          </form>\n        ) : (\n          <div>Bravo ! Tu as bien travaillé dans cette matière aujourd'hui ! Change de discipline ou reviens demain.</div>\n        )}\n\n        {message && <p>{message}</p>}\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default QuizForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}